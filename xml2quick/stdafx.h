// AMS - This program was generated by pg13.exe
#include <windows.h>
#include <cstdint>
#include <cassert>
#include <array>
#include <vector>
#include <deque>
#include <iostream>
#include <fstream>
#include <sstream>
#include <iomanip>
#include <sstream>
#include <algorithm>
#include <iterator>
#include <map>
#include <set>
#include <unordered_map>
#include <unordered_set>

struct QException : public std::exception
{
    QException(std::string s) : std::exception(s.c_str()) {}
    QException(int linenumber, std::string s) : std::exception(("Error at line " + std::to_string(linenumber) + ": " + s).c_str()) {}
    QException(char *s) :std::exception(s) {}
    virtual ~QException() {};
};

#define TIXML_USE_STL
#include <tinyxml.h>
#if defined(_DEBUG)
#pragma comment(lib,"tinyxmlSTL-d.lib")
#else
#pragma comment(lib,"tinyxmlSTL-r.lib")
#endif

#define PP(x) std::cout << #x " is " << x << std::endl;
#define PPX(x) std::cout << #x " is " << std::setfill('0') << std::hex << std::setw(8) << x << std::endl;
